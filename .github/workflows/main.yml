name: Bare RDP via Tailscale

on:
  workflow_dispatch:

jobs:
  rdp:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Remove unnecessary preinstalled software (non-interactive)
        run: |
          Write-Host "Removing dev tools except Python/yt-dlp..."

          $paths = @(
            "C:\Program Files\dotnet",
            "C:\Program Files (x86)\dotnet",
            "C:\Program Files\Microsoft Visual Studio",
            "C:\Program Files\Git",
            "C:\Program Files\AzureCLI",
            "C:\Program Files\nodejs",
            "C:\Program Files (x86)\Microsoft SDKs",
            "C:\Program Files\Java"
          )
          foreach ($p in $paths) {
            if (Test-Path $p) {
              Write-Host "Deleting $p ..."
              Remove-Item -Recurse -Force -ErrorAction SilentlyContinue $p
            }
          }

          # Strip environment vars except Python
          $envVars = "DOTNET_ROOT", "NODE_PATH", "JAVA_HOME", "AZURE_CONFIG_DIR", "NVM_HOME", "NVM_SYMLINK", "GIT_INSTALL_ROOT"
          foreach ($var in $envVars) {
            [Environment]::SetEnvironmentVariable($var, $null, "Machine")
          }

          # Keep only Python + system utilities in PATH
          $keep = @(
            "$env:SystemRoot\system32",
            "$env:SystemRoot",
            "$env:SystemRoot\System32\Wbem",
            "$env:SystemRoot\System32\WindowsPowerShell\v1.0",
            "C:\hostedtoolcache\windows\Python"
          )
          $env:Path = ($keep -join ';')
          [Environment]::SetEnvironmentVariable('Path', $env:Path, 'Machine')

          Write-Host "✅ All non-Python tools removed. System is now bare."

      - name: Configure Core RDP Settings
        run: |
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                             -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                             -Name "SecurityLayer" -Value 0 -Force
          netsh advfirewall firewall delete rule name="RDP-Tailscale"
          netsh advfirewall firewall add rule name="RDP-Tailscale" dir=in action=allow protocol=TCP localport=3389
          Restart-Service -Name TermService -Force
          Write-Host "✅ RDP configured and firewall open."

      - name: Create RDP User
        run: |
          $password = "Abhash@12345!"
          $securePass = ConvertTo-SecureString $password -AsPlainText -Force
          New-LocalUser -Name "abhash" -Password $securePass -AccountNeverExpires
          Add-LocalGroupMember -Group "Administrators" -Member "abhash"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member "abhash"
          echo "USER_CREDS=User: abhash | Password: $password" >> $env:GITHUB_ENV
          Write-Host "✅ Created RDP user 'abhash' with fixed password."

      - name: Install Tailscale
        run: |
          $url = "https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe"
          $installer = "$env:TEMP\tailscale-installer.exe"
          Invoke-WebRequest -Uri $url -OutFile $installer
          Start-Process $installer "/S" -Wait
          Start-Sleep -Seconds 8
          Write-Host "✅ Tailscale installed."

      - name: Establish Tailscale Connection
        env:
          TAILSCALE_AUTH_KEY: ${{ secrets.TAILSCALE_AUTH_KEY }}
        run: |
          $path = "C:\Program Files\Tailscale\tailscale.exe"
          & $path up --authkey $env:TAILSCALE_AUTH_KEY --hostname "bare-rdp-${{ github.run_id }}" --accept-routes --accept-dns
          $tsIP = $null
          for ($i = 0; $i -lt 10 -and -not $tsIP; $i++) {
            $tsIP = & $path ip -4
            Start-Sleep 5
          }
          if (-not $tsIP) { Write-Error "❌ No Tailscale IP assigned"; exit 1 }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV
          Write-Host "✅ Connected to Tailscale. IP: $tsIP"

      - name: Maintain RDP Session
        run: |
          Write-Host "`n========= RDP ACCESS INFO ========="
          Write-Host "Tailscale IP: $env:TAILSCALE_IP"
          Write-Host "Username: abhash"
          Write-Host "Password: Abhash@12345!"
          Write-Host "==================================`n"
          while ($true) {
            Write-Host "[$(Get-Date)] RDP Active — press Stop to end"
            Start-Sleep -Seconds 300
          }
